# /etc/nginx/sites-available/default

server {
	listen 80 default deferred; # for Linux
  # listen 80 default accept_filter=httpready; # for FreeBSD
  # listen 80 default;
  
	# e.g. "localhost" to accept all connections, or "www.example.com"
  # to handle the requests for "example.com" (and www.example.com)
  server_name _;
  
	index index.php index.html index.htm;
	
	access_log  /var/log/nginx/$host-access.log;
	error_log   /var/log/nginx/$host-error.log;
	
	# Path for static files (public site root)
	root /var/www;
	
	# Custom 404 page
  #error_page 404 /404.html;
  
  # This is a pretty long expiry and assumes you're using
  # cachebusting with query params like
  # <script src="application.js?20110529">
  #
  # Just be careful if your using this on a frequently
  # updated static site. You may want to crank this back
  # to 5m which is 5 minutes.
  expires 1M; # yes one month
  
  # Static assets
  location ~* ^.+\.(manifest|appcache)$ {
    expires -1;
    root /var/www; # <- public site root
    access_log /var/log/nginx/$host-static.log;
  }
  
  # Set expires max on static file types
  location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm)$ {
    expires max;
    root /var/www; # <- public site root
    access_log off;
  }
  
  # Block .svn | .git | .cvs access
  if ($request_uri ~* ^.*(\.svn|\.git|\.cvs).*$) { return 404; }
  
  # WordPress Rewrites
  #if ($http_user_agent !~ FeedBurner) {
  # rewrite ^/comment/feed/ http://feeds.feedburner.com/your-comment-feed last;
  # rewrite ^/feed/ http://feeds.feedburner.com/your-feed last;
  #}

  if (!-e $request_filename) {
   rewrite login$ http://$host/wp-login.php; # creates a pretty WordPress login URL: example.com/login
   rewrite ^.*$ /index.php last;
  }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	location ~ \.php$ {
	  # prevent malicious attacks from malformed files containing php code
	  # https://nealpoole.com/blog/2011/04/setting-up-php-fastcgi-and-nginx-dont-trust-the-tutorials-check-your-configuration/
		try_files $uri =400;
		fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  /var/www$fastcgi_script_name;
		include fastcgi_params;
	}
	
	# Use ChromeFrame for the poor IE folk
  add_header "X-UA-Compatible" "IE=Edge,chrome=1";
  
}
